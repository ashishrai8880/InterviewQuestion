1. What is difference between WHERE clause and HAVING clause ?
Ans : In SQL, the WHERE and HAVING clauses are essential for filtering data and refining query results. While both 
serve the purpose of applying conditions, they are used at different stages of query execution and for distinct purposes.

-> WHERE : WHERE Clause is used to filter the records from the table or used while joining more than one table. Only those
records will be extracted who are satisfying the specified condition in the WHERE clause. It can be used with SELECT, UPDATE, 
and DELETE statements. It is applied before any grouping or aggregation occurs in a query .

SELECT S_Name, Age 
FROM Student 
WHERE Age >=18

-> HAVING : HAVING Clause is used to filter the records from the groups based on the given condition in the HAVING Clause.
Those groups who will satisfy the given condition will appear in the final result. It is applied after the grouping and
aggregation of data.

SELECT Age, COUNT(Roll_No) AS No_of_Students 
FROM Student GROUP BY Age
HAVING COUNT(Roll_No) > 1 

 The WHERE clause filters rows before any grouping or aggregation occurs. The HAVING clause filters grouped data after aggregation.

========================================================================================================================
========================================================================================================================

2. What is normalization and what are different types of normalisation ?
Ans : Normalisation is a process for organizing data in a database in order to reduce redundancy and duplicacy in database .

a. First Normal Form : It states that one column can contain single value . If it is containing more than 1 value , 
then it violates first normal form . 
 Rollno.     Language
 1.           c , c++ , java             // it is wrong , it should contain only 1 value for each row in column

b. Second Normal Form : There should not be any partial dependency , there should be full dependency .  For a table
to be in 2NF, it must first meet the requirements of First Normal Form (1NF), meaning all columns should contain single,
indivisible values without any repeating groups. Additionally, the table should not have partial dependencies

Example : https://www.geeksforgeeks.org/second-normal-form-2nf/ 






=================================================================================================================
=================================================================================================================

3. What is Cascade?
In SQL, the term CASCADE refers to an action triggered automatically when a change occurs in a parent table,
propagating the update or deletion to the related child table(s). By using ON DELETE CASCADE or ON UPDATE CASCADE,
we can ensure referential integrity, maintain consistent relationships, and reduce the complexity of manual database
management tasks.


=================================================================================================================
=================================================================================================================


4. What is Inner Join ?
Ans : Inner join : The INNER JOIN clause in SQL is used to combine records from two or more tables. The result contains
only the rows that have matching values in both tables based on a specific condition. 

Inner Join:

Combines rows from two tables where there is a match based on the condition.
If there’s no match, those rows are not included in the result.
Example: If you have two tables, Employees and Departments, an inner join will show only employees who belong to a department.

Outer Join:

Returns all rows from one table and the matching rows from the other table.
If there is no match, it still returns the rows from the first table with NULLs in place of missing values from the second table.
There are three types of outer joins: Left, Right, and Full.

Left Join (or Left Outer Join):

Returns all rows from the left table and the matching rows from the right table.
If there is no match, the result will show NULLs for the right table columns.
Example: If you have a list of all employees and want to include department details (if available), a left join will return all employees, even if they don’t belong to a department.

Right Join (or Right Outer Join):

Returns all rows from the right table and the matching rows from the left table.
If there’s no match, it shows NULLs for the left table columns.
Example: If you want to list all departments with their employees, a right join will show all departments, even if no employees belong to them.


Cross Join (also known as a Cartesian Join)
combines every row from the first table with every row from the second table.

It does not require any matching condition.
The result is the cartesian product of the two tables, meaning if the first table has 3 rows and the second table has 4 rows, the result will have 3 * 4 = 12 rows.


=================================================================================================================
=================================================================================================================

5. What are hooks in sequelize ?
Ans : Hooks (also known as lifecycle events), are functions which are called before and after calls in sequelize are
executed. For example, if you want to always set a value on a model before saving it, you can add a beforeUpdate hook.

For Example : beforeUpdate , afterValidate .

=================================================================================================================
=================================================================================================================

6. What are procedure in MySQL ?
Ans:  In MySQL, a stored procedure is a set of SQL statements that can be stored and executed on the database server.
It is a way to encapsulate complex queries or operations into reusable blocks of code that can be executed multiple 
times without needing to rewrite the logic every time. Stored procedures can take parameters, perform various operations,
and return results. They can help improve performance by reducing network traffic and enforcing consistency.

DELIMITER $$

CREATE PROCEDURE procedure_name (IN param1 INT, OUT param2 INT)
BEGIN
   -- SQL statements
   SELECT COUNT(*) INTO param2 FROM table_name WHERE column_name = param1;
END $$

DELIMITER ;
In this example:

IN param1 INT: an input parameter.
OUT param2 INT: an output parameter that will hold the result of the operation.

Example Use Case in a Project:
In an e-commerce platform, a stored procedure can be used to calculate customer loyalty points. For example,
after every order, a procedure might be triggered to calculate the loyalty points based on the order value, and
update the customer's loyalty balance in the database. This could involve updating the orders table and the
customers table in one seamless operation.

Benefits in this case:
Consistency: Loyalty points calculation happens in a consistent manner, with no risk of errors in the application layer.
Performance: The calculation is done directly in the database, making it faster compared to performing these operations
in the application layer.


=================================================================================================================
=================================================================================================================

7. How to delete duplicate rows in MySQL ?
Name    Age    Salary
Varun   34     40000
Ravi    45     65000
Varun   34     40000
Ravi    45     65000
Varun   34     40000
Ravi    45     65000

Ans. Method 1 : DELET from employees WHERE empId not in (Select min(rowId) from employees group by name  )


=================================================================================================================
=================================================================================================================

8. How to swap two values in MySQL . suppose i have gender now i want to change gender of each employee , write query for this ?
Ans : UPDATE persons
      SET gender = CASE 
                     WHEN gender = 'f' THEN 'm'
                     WHEN gender = 'm' THEN 'f'
                   END ;

=================================================================================================================
=================================================================================================================

9. What are subsets of sql and types of sql commands ?
Ans : In SQL (Structured Query Language), there are different subsets and categories of commands designed for various operations. Here’s a breakdown of the subsets and types of SQL commands:

Subsets of SQL:
SQL can be broadly categorized into the following subsets:

1. DDL (Data Definition Language):

Purpose: This subset deals with defining and managing database objects such as tables, indexes, and schemas.
Common Commands: CREATE , ALTER , DROP , TRUNCATE , RENAME 

2. DML (Data Manipulation Language):

Purpose: DML commands are used for managing and manipulating data within the database.
Common Commands: SELECT , INSERT , UPDATE , DELETE , 

3. DCL (Data Control Language):

Purpose: DCL commands manage access permissions and security within a database.
Common Commands:
GRANT – Gives users access privileges to database objects.
REVOKE – Removes access privileges from users.

4. TCL (Transaction Control Language):

Purpose: TCL commands manage the changes made by DML statements, ensuring that transactions are properly handled.
Common Commands:
COMMIT – Saves changes made in a transaction permanently.
ROLLBACK – Undoes changes made in a transaction.
SAVEPOINT – Sets a point within a transaction to which you can roll back.
SET TRANSACTION – Defines properties for a transaction.

=================================================================================================================
=================================================================================================================
10. What are advantage and disadvantage of SQL ?
Ans : Disadvantage : Complex Interface : SQL has a difficult interface that makes few users uncomfortable while 
dealing with the database.
-> Cost : Some versions are costly and hence, programmers cannot access it.
-> Partial Control : Due to hidden business rules, complete control is not given to the database.
-> Limited Flexibility: SQL databases are less flexible than NoSQL databases when it comes to handling unstructured or
semi-structured data, as they require data to be structured into tables and columns.
-> Scalability : It is vertical scalable.

Advantage : Big Community Support . No coding skills required . 


=================================================================================================================
=================================================================================================================

11. What are triggers in MySQL ?
Ans : In MySQL, a trigger is a special kind of stored procedure that is automatically executed or "triggered" in
response to certain events on a specific table or view. Triggers are used to enforce business rules, perform 
validation, or automate actions when changes are made to data in a database.

Key Features of Triggers in MySQL:
Triggers are tied to specific events that occur on a table (like INSERT, UPDATE, or DELETE).
They are executed automatically by the database system before or after an event on a table (depending on how they are 
defined).
Triggers allow for actions such as logging changes, updating related tables, or enforcing constraints that cannot
be enforced by the database schema alone.
