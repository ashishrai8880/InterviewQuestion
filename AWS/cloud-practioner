
Traditional Infra -> You own everything or rent it out .
There are government cloud also whcih is completely seperate from other . 

-> Types of Cloud Service
1. Infrastructure as a service (IAAS) -> OS Level responsibility . eg : ec2 .
  What it is: Provides virtualized computing resources over the internet.
  Users manage: Applications, data, runtime, middleware, and OS.
  Providers manage: Virtualization, servers, storage, and networking.
  Examples: Amazon Web Services (AWS EC2) , Microsoft Azure Virtual Machines , Google Compute Engine

2. Platform as a service (PAAS)-> code level resposibility . eg : AWS elastic beanstalk , azure webapps .
  What it is: Offers a development and deployment environment for applications.
  Users manage: Applications and data.
  Providers manage: Everything else including OS, middleware, runtime, and infrastructure.
  Examples:Google App Engine , Microsoft Azure App Services ,Heroku

3. Software as a service (SAAS) -> Consumer eg : twitter . 
  What it is: Delivers fully functional applications over the internet.
  Users manage: Only usage and configuration.
  Providers manage: Everything else (application, data, infrastructure).
  Examples: Google Workspace (Gmail, Docs, Sheets) , Microsoft 365 , Salesforce

4. Function as a Service (FaaS) / Serverless
  What it is: A model where developers deploy code in response to events without managing servers.
  Users manage: Only the code and event triggers.
  Providers manage: Entire infrastructure and scaling.
  Examples: AWS Lambda , Azure Functions , Google Cloud Functions

 ============================Types of Cloud Deployment Models
1. Public Cloud
Definition: Cloud services offered over the internet by third-party providers.
Owned and operated by: Providers like AWS, Microsoft Azure, Google Cloud.
Resources: Shared among multiple customers ("multi-tenant").
Pros: Cost-effective, scalable, no maintenance.
Cons: Less control, data security concerns for sensitive workloads.

2. Private Cloud
Definition: Cloud infrastructure dedicated to a single organization.
Owned and operated by: Either the company itself or a third-party exclusively for one client.
Resources: Used by one organization only.
Pros: High security and control.
Cons: Expensive and complex to manage.

3. Hybrid Cloud
Definition: A mix of public and private clouds with integration between them.
Use Case: Keep sensitive data in a private cloud and use public cloud for less critical workloads.
Pros: Flexibility, cost-efficiency, and scalability.
Cons: Complex integration and management.

4. Multi-Cloud
Definition: Using services from multiple cloud providers (e.g., AWS + Azure + GCP).
Purpose: Avoid vendor lock-in, use best-of-breed services.
Pros: Redundancy, flexibility, optimization.
Cons: Complex governance and security management.

===================================================üß± Core Components of AWS Global Infrastructure ===============================================================
1. Regions
Definition: A geographic area (e.g., US East, Europe, Asia Pacific). Regions are inter connected with AWS network .
Each region consists of multiple Availability Zones.
AWS has over 30 regions globally (and more coming).
‚úÖ You choose which region to run your applications in.

2. Availability Zones (AZs)
Definition: Physically separate data centers within a region.
Each region has at least 2 to 6 AZs, designed for high availability.
AZs are isolated but connected with low-latency, high-speed links.
Example: US East (N. Virginia) has 6 AZs.

3. Edge Locations
Definition: Data centers used by Amazon CloudFront (AWS‚Äôs CDN) to cache content closer to users.
Located in hundreds of cities worldwide.
Improve performance and reduce latency for content delivery.

4. Local Zones
Definition: Extensions of a region placed near large population or business centers.
Designed to run latency-sensitive applications closer to end-users.

5. Wavelength Zones
Definition: Infrastructure placed at telecom providers‚Äô networks to deliver ultra-low latency for 5G apps.
Used for things like real-time gaming, AR/VR, or autonomous vehicles.

6. AWS Outposts
Definition: Physical racks of AWS hardware installed on-premises (in your own data center).
Extends AWS infrastructure and services to private or hybrid cloud environments.

==========================üß© AWS Shared Responsibility Model Responsibility Breakdown =======================================================
1. AWS (Cloud Provider) ‚Äì "Security of the Cloud"
AWS is responsible for securing the infrastructure that runs all the services offered in the AWS Cloud:
Physical security of data centers
Hardware, networking, and facilities
Software for compute, storage, and database services
Global infrastructure (Regions, AZs, Edge Locations)

2. Customer (You) ‚Äì "Security in the Cloud"
You are responsible for managing everything you put into the cloud and how you configure it:
Data (encryption, classification)
Identity and Access Management (IAM)
Applications
OS and network configurations (for IaaS)
Firewall settings
Client-side encryption
UserData , encryption , scaling , ec2 and lot more is user responsibility

üìå Sample Exam Questions
‚ùìQuestion 1:
Which of the following is the customer‚Äôs responsibility under the AWS Shared Responsibility Model?

A. Maintaining the physical security of AWS data centers
B. Managing access to data stored in Amazon S3
C. Securing the underlying hypervisor
D. Monitoring network infrastructure

‚úÖ Answer: B

‚ùìQuestion 2:
In the AWS shared responsibility model, AWS is responsible for which of the following? (Choose TWO)

A. Configuring security group rules
B. Updating the firmware on host servers
C. Enforcing multi-factor authentication for users
D. Physical security of data centers
E. Encrypting customer data

‚úÖ Answers: B and D

 ==============================================‚úÖ Topic: What is AWS IAM (Identity and Access Management)? =================================================
üîπ Definition:
AWS IAM is a free AWS service that helps you securely control access to AWS services and resources.

It allows you to:
Create and manage users and groups
Assign permissions to allow or deny access to AWS resources
Use policies to define who can do what (e.g., read S3, start EC2)
Role  : role can be assigned to user , service and application . It is like 1 day prime minister . and if any user assigned any role , then it will be overcome over user's group 
assgined policy . 

Root User should be avoided and there is no way to reduce its permssion . Newly created user has not permission by default until it is assigned to some group 
One can create upto 5000 account or user . There can be more but after raising request to AWS . 

An Amazon Resource Name (ARN) is a unique identifier for an AWS resource, such as an EC2 instance, S3 bucket, or IAM user. It's a string of characters that
specifies the resource's location and other identifying information within the AWS ecosystem. ARNs are crucial for unambiguously referencing resources across AWS,
especially in scenarios like IAM policies, API calls, and resource tagging

There always should be least priviledge possible or policy to any user . IAM policies are JSON documented . 

üõ°Ô∏è Key Features of IAM
Feature	Description
Users	Individual accounts for people or applications
Groups	Collections of users with shared permissions
Roles	Temporary access permissions for users/services (no credentials needed)
Policies	JSON documents that define what actions are allowed or denied
MFA (Multi-Factor Auth)	Adds extra layer of security to user logins
Federation	Allows users from external identity providers (e.g., Active Directory, Google) to access AWS

üîë Exam-Relevant Points
IAM is global (not tied to a region)
IAM allows granular permissions (per service, per action)
IAM is free
Root user has full access ‚Äî should be protected and rarely used
IAM roles are used by AWS services or external users to assume temporary access

üìå Sample Exam Questions
‚ùìQuestion 1:
What does AWS Identity and Access Management (IAM) enable you to do?

A. Automatically scale AWS resources
B. Securely control access to AWS services and resources
C. Monitor AWS usage across regions
D. Encrypt data in transit
‚úÖ Answer: B

‚ùìQuestion 2:
Which IAM entity is used to grant temporary access to AWS resources?

A. IAM User
B. IAM Policy
C. IAM Role
D. IAM Group
‚úÖ Answer: C

‚ùìQuestion 3:
Which of the following is a best practice for the AWS root user account?

A. Use it for everyday tasks
B. Disable it completely
C. Share it with your team
D. Enable MFA and use only when necessary
‚úÖ Answer: D

 ==========================================================üîπ Main Types of AWS Policies ===========================================================
1. Identity-Based Policies (Most Common)
Attached to: IAM users, groups, or roles
Purpose: Grant permissions to users or roles
Examples: Allow a user to access Amazon S3 , Deny EC2 access for a grou
üü¢ You define and manage these.

2. Resource-Based Policies
Attached to: AWS resources directly (e.g., an S3 bucket, SNS topic)
Purpose: Specify who (which users, accounts, or services) can access that specific resource
Examples: An S3 bucket policy that allows another AWS account to read from the bucket . An SNS topic policy allowing Lambda to publish messages
üü¢ Often used for cross-account access.

3. Permissions Boundaries
Attached to: IAM users or roles
Purpose: Define the maximum permissions an identity-based policy can grant . Permission boundaries actually do not grant permission . Ye bas boundaries set karta hai . 
like ec2 me user 2-3 cheeze kar sakta hai . ab ye permission boundaries set karne k baad , user bas ec2 me hi kuch kar sakta hai . s3 , lambda ya koi or service me kuch 
nahi kar sakta . isse bas boundaries set karte hai . actual me ye permissioin deta nahii h kisi ko . 
Think of this as a "permissions ceiling" ‚Äî you can‚Äôt go beyond it even if other policies allow more.
üü¢ Used for advanced access control, especially in large orgs.

4. Service Control Policies (SCPs)
Attached to: AWS Organizations organizational units (OUs) or accounts . It is same as permission boundaries ,but at large level . if there is more than 1 organisation 
then basically one can set its policies to its sub organisational units . If i give permission that particular sub organisation unit can just create 5 ec2 , then that 
sub organisation will be able to just create 5 ec2 not more than that . 
Purpose: Set permission guardrails across multiple accounts
Can allow or deny certain actions regardless of the IAM policies in those accounts.
üü¢ Only available when using AWS Organizations

5. Session Policies
Used with: Temporary credentials (like when using STS AssumeRole)
Purpose: Provide temporary, scoped-down permissions for a session
Useful for fine-grained, temporary access

6. ACL (Access Control Policies )
Amazon S3 access control lists (ACLs) enable you to manage access to buckets and objects. Each bucket and object has an ACL attached to it as a subresource. It defines
which AWS accounts or groups are granted access and the type of access. When a request is received against a resource, Amazon S3 checks the corresponding ACL to verify
that the requester has the necessary access permissions. It is first policies which do not use JSON format . Also ACL is like resource based policy but it can be use accross
different aws accounts . Like s3 bucket , we can give access to different account by using ACL . 

Best Practice of IAM 
1. use MFA
2. Rotate keys and password . Do not use root user account . 
3. Least priviledge permission . 
4. IAM access analyzer -> tool to generate least priviledge policy based on access activity
5. Regulary remove user , role , permissioin , policy and credentials .
6. condition like IP range and geo location can be applied . 

üìå Sample Exam Questions
‚ùìQuestion 1:
Which type of policy is attached directly to an AWS resource, such as an S3 bucket, to control access?

A. Identity-based policy
B. Resource-based policy
C. Session policy
D. Permissions boundary

‚úÖ Answer: B

‚ùìQuestion 2:
What is the purpose of a permissions boundary in AWS IAM?

A. To define resource-level access
B. To allow access to external accounts
C. To define the maximum permissions a user or role can have
D. To allow cross-region access to resources

‚úÖ Answer: C

‚ùìQuestion 3:
Which AWS feature allows organizations to set permission limits across multiple AWS accounts?

A. IAM policies
B. Resource policies
C. Service Control Policies (SCPs)
D. Permission boundaries

‚úÖ Answer: C
